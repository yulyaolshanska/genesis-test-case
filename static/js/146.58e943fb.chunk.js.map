{"version":3,"file":"static/js/146.58e943fb.chunk.js","mappings":"qQAEaA,EAAYC,EAAAA,GAAAA,IAAH,6KAIX,SAACC,GAAD,OAAOA,EAAEC,MAAMC,MAAMC,MAArB,IAGA,SAACH,GAAD,OAAOA,EAAEC,MAAMC,MAAME,OAArB,IAKEC,EAAaN,EAAAA,GAAAA,GAAH,4VASZ,SAACC,GAAD,OAAOA,EAAEC,MAAMC,MAAMC,MAArB,IASEG,EAAeP,EAAAA,GAAAA,OAAH,0XAMb,SAACC,GAAD,OAAQA,EAAEO,OAAS,OAAS,WAA5B,IAGU,SAACP,GAAD,OAClBA,EAAEO,OAASP,EAAEC,MAAMO,OAAOC,OAAST,EAAEC,MAAMO,OAAOE,KADhC,IAEX,SAACV,GAAD,OACPA,EAAEO,OAASP,EAAEC,MAAMO,OAAOG,iBAAmBX,EAAEC,MAAMO,OAAOC,MADrD,IAMa,SAACT,GAAD,OAClBA,EAAEO,OAASP,EAAEC,MAAMO,OAAOI,SAAWZ,EAAEC,MAAMO,OAAOE,KADlC,IAEJ,SAACV,GAAD,OAAOA,EAAEC,MAAMO,OAAOI,QAAtB,IACP,SAACZ,GAAD,OACPA,EAAEO,OAASP,EAAEC,MAAMO,OAAOG,iBAAmBX,EAAEC,MAAMO,OAAOI,QADrD,IAMAC,EAA4Bd,EAAAA,GAAAA,IAAH,sFAKzBe,GAAmBf,EAAAA,EAAAA,IAAOO,EAAPP,CAAH,mG,mJC7DhBgB,EAAiBhB,EAAAA,GAAAA,IAAH,qEAIdiB,EAAcjB,EAAAA,GAAAA,GAAH,wFAKXkB,EAAQlB,EAAAA,GAAAA,EAAH,iEAILmB,EAAoBnB,EAAAA,GAAAA,EAAH,+CAGjBoB,EAAoBpB,EAAAA,GAAAA,GAAH,sB,4BCyC9B,EAjDgD,SAAC,GAK1C,IAJLqB,EAII,EAJJA,UACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,MACIC,EACA,EADJC,GAEMC,GAAWC,EAAAA,EAAAA,QAAyB,MAC1C,GAAgDC,EAAAA,EAAAA,UAAiB,GAAjE,eAAOC,EAAP,KAAyBC,EAAzB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeN,EAASO,QAC9B,GAAKD,GAEDE,IAAAA,cAAmB,CACrB,IAAMC,EAAM,IAAID,KAChBC,EAAIC,YAAYJ,GAChBG,EAAIE,GAAGH,IAAAA,OAAAA,gBAA2B,WAChCC,EAAIG,WAAWjB,GACfc,EAAIE,GAAGH,IAAAA,OAAAA,iBAA4B,WACjC,IAAMK,EAAYC,aAAaC,QAAQjB,GAErB,OAAde,IACFP,EAAaU,YAAcC,SAASJ,GAEvC,GACF,GACF,CACF,GAAE,CAAClB,EAAWG,IAEf,IAOMoB,EAAM,UAAMtB,EAAN,mBAAiCC,EAAjC,SAEZ,OACE,kBACEsB,MAAM,OACNC,IAAKpB,EACLqB,UAAQ,EACRC,aAdqB,WAAO,IAAD,EACvBN,GAAc,UAAAhB,EAASO,eAAT,eAAkBS,cAAeb,EACjC,IAAhBa,IACFF,aAAaS,QAAQzB,EAAS0B,OAAOR,IACrCZ,EAAoBY,GAEvB,EASGE,OAAQA,GAGb,ECvDYO,EAAcnD,EAAAA,GAAAA,GAAH,sBAEXoD,GADapD,EAAAA,GAAAA,EAAH,sBACKA,EAAAA,GAAAA,GAAH,6C,UCkFzB,EA5DoC,WAClC,OAA8BqD,EAAAA,EAAAA,MAAtB5B,GAAI6B,OAAZ,MAAuB,GAAvB,EACcC,GAAWC,EAAAA,EAAAA,IAAsBF,GAAvCG,KACR,GAA0C7B,EAAAA,EAAAA,UACxC,MADF,eAAO8B,EAAP,KAAsBC,EAAtB,KAGA,GAAsC/B,EAAAA,EAAAA,WAAS,GAA/C,eAAOgC,EAAP,KAAoBC,EAApB,MAEA9B,EAAAA,EAAAA,YAAU,WACJwB,GAAUA,EAAOO,SAAWP,EAAOO,QAAQC,OAAS,GACtDJ,EAAiBJ,EAAOO,QAAQ,GAEnC,GAAE,CAACP,IASJ,OACE,UAAC,KAAD,YACE,SAACtC,EAAD,iBAAcsC,QAAd,IAAcA,OAAd,EAAcA,EAAQS,SACtB,SAAC7C,EAAD,iBAAoBoC,QAApB,IAAoBA,OAApB,EAAoBA,EAAQU,eAC5B,SAACjD,EAAD,UACG4C,GAAeF,IACd,SAAC,EAAD,CACEjC,GAAIiC,EAAcjC,GAClBJ,UAAWqC,EAAcQ,KACzB3C,MAAOmC,EAAcnC,MACrBD,iBAAkBoC,EAAcpC,sBAKpCsC,GAAeF,IACf,SAAC,EAAD,CACEjC,GAAIiC,EAAcjC,GAClBJ,UAAWqC,EAAcQ,KACzB3C,MAAOmC,EAAcnC,MACrBD,iBAAkBoC,EAAcpC,oBAGpC,SAACJ,EAAD,wBACA,SAACE,EAAD,iBACGmC,QADH,IACGA,OADH,EACGA,EAAQO,QAAQK,KAAI,SAACC,GAAD,OACnB,SAAChB,EAAD,CACEiB,QAAS,kBAlCO,SAACD,GACH,WAAlBA,EAAOE,SACTT,GAAe,GACfF,EAAiBS,GAEpB,CA6BwBG,CAAkBH,EAAxB,EAET3C,GAAI2C,EAAO3C,GACXuC,MAAOI,EAAOJ,MAJhB,UAME,SAACb,EAAD,UAAciB,EAAOJ,SAJhBI,EAAO3C,GAHK,QAa5B,C","sources":["components/coursesList/CoursesList.styled.ts","pages/courseDetailsPage/CourseDetailsPage.styled.ts","components/VideoPlayer/VideoPlayer.tsx","components/CourseLessonsItem/CourseLessonsItem.styled.ts","pages/courseDetailsPage/CourseDetailsPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 40px 20px;\n  margin-left: auto;\n  margin-right: auto;\n  @media ${(p) => p.theme.media.tablet} {\n    width: 768px;\n  }\n  @media ${(p) => p.theme.media.desktop} {\n    width: 1280px;\n  }\n`;\n\nexport const CourseList = styled.ul`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n  margin-bottom: 32px;\n  @media ${(p) => p.theme.media.tablet} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: unset;\n    gap: 24px;\n  }\n`;\n\nexport const StyledButton = styled.button<{ active: boolean }>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 28px;\n\n  border: ${(p) => (p.active ? \"none\" : \"2px solid\")};\n  border-radius: 40px;\n\n  background-color: ${(p) =>\n    p.active ? p.theme.colors.accent : p.theme.colors.white};\n  color: ${(p) =>\n    p.active ? p.theme.colors.secondatyBtnText : p.theme.colors.accent};\n  cursor: pointer;\n\n  :hover:not(:disabled),\n  :focus:not(:disabled) {\n    background-color: ${(p) =>\n      p.active ? p.theme.colors.hoverBtn : p.theme.colors.white};\n    border-color: ${(p) => p.theme.colors.hoverBtn};\n    color: ${(p) =>\n      p.active ? p.theme.colors.secondatyBtnText : p.theme.colors.hoverBtn};\n    outline: none;\n  }\n`;\n\nexport const PaginationButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\nexport const PaginationButton = styled(StyledButton)`\n  border-radius: 20%;\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const VideoContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const CourseTitle = styled.h1`\n  font-weight: 700;\n  font-size: 32px;\n  text-align: center;\n`;\nexport const Title = styled.p`\n  font-weight: 700;\n  font-size: 32px;\n`;\nexport const CourseDescription = styled.p`\n  text-align: center;\n`;\nexport const CourseLessonsList = styled.ol``;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport Hls from \"hls.js\";\n\ninterface VideoPlayerProps {\n  videoLink: string;\n  previewImageLink: string;\n  order: number;\n  id: string;\n}\n\nconst VideoPlayer: React.FC<VideoPlayerProps> = ({\n  videoLink,\n  previewImageLink,\n  order,\n  id: videoId,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [currentVideoTime, setCurrentVideoTime] = useState<number>(0);\n\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    if (!videoElement) return;\n\n    if (Hls.isSupported()) {\n      const hls = new Hls();\n      hls.attachMedia(videoElement);\n      hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(videoLink);\n        hls.on(Hls.Events.MANIFEST_PARSED, () => {\n          const savedTime = localStorage.getItem(videoId);\n\n          if (savedTime !== null) {\n            videoElement.currentTime = parseInt(savedTime);\n          }\n        });\n      });\n    }\n  }, [videoLink, videoId]);\n\n  const handleTimeUpdate = () => {\n    const currentTime = videoRef.current?.currentTime || currentVideoTime;\n    if (currentTime !== 0) {\n      localStorage.setItem(videoId, String(currentTime));\n      setCurrentVideoTime(currentTime);\n    }\n  };\n  const poster = `${previewImageLink}/lesson-${order}.webp`;\n\n  return (\n    <video\n      width=\"100%\"\n      ref={videoRef}\n      controls\n      onTimeUpdate={handleTimeUpdate}\n      poster={poster}\n    />\n  );\n};\n\nexport default VideoPlayer;\n","import styled from \"styled-components\";\n\nexport const LessonTitle = styled.h2``;\nexport const LessonLink = styled.a``;\nexport const CourseLesson = styled.li`\n  cursor: pointer;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetCourseByIdQuery } from \"redux/coursesApi\";\nimport {\n  CourseDescription,\n  CourseLessonsList,\n  CourseTitle,\n  Title,\n  VideoContainer,\n} from \"./CourseDetailsPage.styled\";\nimport VideoPlayer from \"components/VideoPlayer/VideoPlayer\";\nimport {\n  CourseLesson,\n  LessonTitle,\n} from \"components/CourseLessonsItem/CourseLessonsItem.styled\";\nimport { Container } from \"components/coursesList/CoursesList.styled\";\n\ninterface LessonseDetails {\n  id: string;\n  link: string;\n  title: string;\n  status: string;\n  previewImageLink: string;\n  order: number;\n}\n\nconst CourseDetailsPage: React.FC = () => {\n  const { id: courseId = \"\" } = useParams();\n  const { data: course } = useGetCourseByIdQuery(courseId);\n  const [currentLesson, setCurrentLesson] = useState<LessonseDetails | null>(\n    null\n  );\n  const [isVideoOpen, setIsVideoOpen] = useState(false);\n\n  useEffect(() => {\n    if (course && course.lessons && course.lessons.length > 0) {\n      setCurrentLesson(course.lessons[0]);\n    }\n  }, [course]);\n\n  const handleLessonClick = (lesson: LessonseDetails) => {\n    if (lesson.status !== \"locked\") {\n      setIsVideoOpen(true);\n      setCurrentLesson(lesson);\n    }\n  };\n\n  return (\n    <Container>\n      <CourseTitle>{course?.title}</CourseTitle>\n      <CourseDescription>{course?.description}</CourseDescription>\n      <VideoContainer>\n        {isVideoOpen && currentLesson && (\n          <VideoPlayer\n            id={currentLesson.id}\n            videoLink={currentLesson.link}\n            order={currentLesson.order}\n            previewImageLink={currentLesson.previewImageLink}\n          />\n        )}\n      </VideoContainer>\n\n      {!isVideoOpen && currentLesson && (\n        <VideoPlayer\n          id={currentLesson.id}\n          videoLink={currentLesson.link}\n          order={currentLesson.order}\n          previewImageLink={currentLesson.previewImageLink}\n        />\n      )}\n      <Title>Lessons:</Title>\n      <CourseLessonsList>\n        {course?.lessons.map((lesson: LessonseDetails) => (\n          <CourseLesson\n            onClick={() => handleLessonClick(lesson)}\n            key={lesson.id}\n            id={lesson.id}\n            title={lesson.title}\n          >\n            <LessonTitle>{lesson.title}</LessonTitle>\n          </CourseLesson>\n        ))}\n      </CourseLessonsList>\n    </Container>\n  );\n};\nexport default CourseDetailsPage;\n"],"names":["Container","styled","p","theme","media","tablet","desktop","CourseList","StyledButton","active","colors","accent","white","secondatyBtnText","hoverBtn","PaginationButtonContainer","PaginationButton","VideoContainer","CourseTitle","Title","CourseDescription","CourseLessonsList","videoLink","previewImageLink","order","videoId","id","videoRef","useRef","useState","currentVideoTime","setCurrentVideoTime","useEffect","videoElement","current","Hls","hls","attachMedia","on","loadSource","savedTime","localStorage","getItem","currentTime","parseInt","poster","width","ref","controls","onTimeUpdate","setItem","String","LessonTitle","CourseLesson","useParams","courseId","course","useGetCourseByIdQuery","data","currentLesson","setCurrentLesson","isVideoOpen","setIsVideoOpen","lessons","length","title","description","link","map","lesson","onClick","status","handleLessonClick"],"sourceRoot":""}